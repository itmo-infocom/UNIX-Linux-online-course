1
00:00:06,370 --> 00:00:12,830
Итак, у нас есть работающая сетевая служба,
 и пришло время расширить наш пользовательский интерфейс

2
00:00:12,830 --> 00:00:17,929
в плане сетевого взаимодействия.

3
00:00:17,929 --> 00:00:23,439
$ git checkout Example_7

4
00:00:23,439 --> 00:00:32,619
$ git diff Example_6 Example_7 | less

5
00:00:32,619 --> 00:00:46,320
Основные изменения внесены в скрипт `calc_ui`.

6
00:00:46,320 --> 00:00:52,400
В начале скрипта, как видите, добавлены
 некоторые определения по умолчанию:

7
00:00:52,400 --> 00:01:04,979
HOST, PORT для соединения с calc-server и имя скрипта CALC.

8
00:01:04,979 --> 00:01:14,790
Затем мы видим, что добавлена поддержка конфигурационных файлов.

9
00:01:14,790 --> 00:01:21,820
Первым делом мы проверяем личную конфигурацию пользователя
 в домашнем каталоге -- это скрытый файл,

10
00:01:21,820 --> 00:01:25,320
начинающийся с "точки" .calc.conf.

11
00:01:25,320 --> 00:01:35,690
Если такой файл существует, мы загружаем его как файл библиотеки Shell.

12
00:01:35,690 --> 00:01:45,230
Если мы не находим этот файл, мы проверяем
 общесистемную конфигурацию `/etc/calc.conf`

13
00:01:45,230 --> 00:01:49,660
и загружаем ее, если она существует.

14
00:01:49,660 --> 00:01:59,180
Вы можете поместить в эти файлы свои собственные
 определения переменных соединения.

15
00:01:59,180 --> 00:02:09,020
Мы видим новую функцию `help` для отображения
 справочного сообщения и некоторую логику для обработки

16
00:02:09,020 --> 00:02:11,720
параметров скрипта.

17
00:02:11,720 --> 00:02:34,439
Теперь мы обрабатываем параметр --help
 и необязательные позиционные параметры хоста/порта.

18
00:02:34,439 --> 00:02:48,349
Как мы видим, мы можем установить только хост
 или и хост, и порт, используя аргументы скрипта.

19
00:02:48,349 --> 00:02:59,480
И наконец -- мы проверяем имя скрипта, удаляя его функцией `basename`

20
00:02:59,480 --> 00:03:03,109
из текущего пути к скрипту.

21
00:03:03,109 --> 00:03:18,519
Если сценарий называется ncalc_ui, мы меняем
 переменную CALC на netcat с параметрами доступа

22
00:03:18,519 --> 00:03:21,359
к хосту.

23
00:03:21,359 --> 00:03:28,629
Если такие параметры не указаны, мы выводим сообщение об ошибке.

24
00:03:28,629 --> 00:03:42,419
В строке, где мы вызывали скрипт `calc`, мы заменяем его переменной CALC.

25
00:03:42,419 --> 00:03:53,980
Вот и все -- мы просто изменили файл UI, не меняя основной логики.

26
00:03:53,980 --> 00:03:55,939
Давайте установим его:

27
00:03:55,939 --> 00:04:04,829
$ sudo make install

28
00:04:37,819 --> 00:04:49,400
Как мы видим, `ncalc_ui` -- это символьная ссылка на `calc_ui`.

29
00:04:49,400 --> 00:04:50,840
OK.

30
00:04:50,840 --> 00:04:55,680
Проверим:

31
00:04:55,680 --> 00:04:59,699
$ ncalc_ui

32
00:04:59,699 --> 00:05:07,759
Работает!

33
00:05:07,759 --> 00:05:18,310
Но может мы ошибаемся, и это просто наш старый местный калькулятор?

34
00:05:18,310 --> 00:05:50,099
Проверим, остановив службу `xinetd`:

35
00:05:50,099 --> 00:06:33,599
# systemctl stop xinetd

36
00:06:33,599 --> 00:06:38,190
Наша калькуляция завершилась с ошибкой.

37
00:06:38,190 --> 00:06:48,169
А как насчет несетевого `calc_ui`?

38
00:06:48,169 --> 00:06:54,849
$ calc_ui

39
00:06:54,849 --> 00:06:56,770
продолжает работать.

40
00:06:56,770 --> 00:07:07,699
Давайте снова запустим `xinetd`:

41
00:07:07,699 --> 00:07:18,469
# systemctl start xinetd

42
00:07:18,469 --> 00:07:21,590
Сетевой `ncalc_ui` снова заработал!

43
00:07:21,590 --> 00:07:30,080
Что и следовало доказать -- сетевая версия калькулятора создана!

