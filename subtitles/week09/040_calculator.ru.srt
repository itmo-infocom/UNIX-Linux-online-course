1
00:00:06,160 --> 00:00:08,240
Итак, шагнём вперед:

2
00:00:08,240 --> 00:00:12,420
$ git checkout Example_2

3
00:00:18,160 --> 00:00:23,670
Мы видим какие-то изменения в README:

4
00:00:23,670 --> 00:00:28,490
$ cat README.md

5
00:00:29,490 --> 00:00:38,000
и в нашем репозитории мы видим сценарий `calc`:

6
00:00:40,940 --> 00:00:48,010
Это означает, что мы можем отметить
 некоторые этапы нашей разработки тегами.

7
00:00:48,010 --> 00:00:54,129
А затем, используя операцию «checkout»,
 мы можем переключаться между ними в любое время.

8
00:00:54,129 --> 00:00:56,520
Ладно -- посмотрим на наш калькулятор:

9
00:00:56,520 --> 00:00:59,850
$ cat calc

10
00:01:02,910 --> 00:01:09,270
Вау -- выглядит довольно просто!

11
00:01:09,270 --> 00:01:17,600
Мы вызываем программу `expr` с аргументами, переданными нашему скрипту.

12
00:01:17,600 --> 00:01:24,729
И, как мы видим, `expr` -- это просто вычислитель выражений:

13
00:01:24,729 --> 00:01:28,849
$ man expr

14
00:01:28,849 --> 00:01:36,310
И это обычный способ разработки UNIX --

15
00:01:36,310 --> 00:01:47,130
не изобретать велосипед, а просто брать уже готовые компоненты
 и комбинировать их при помощи оболочки.

16
00:01:47,130 --> 00:01:50,759
ОК -- попробуем проверить:

17
00:01:50,759 --> 00:01:59,660
$ ./calc 1 + 2
3

18
00:01:59,660 --> 00:02:05,860
Понятное дело, что выражение в данном случае -- это всего лишь

19
00:02:05,860 --> 00:02:16,380
аргументы команды `expr`, и мы должны разделять их пробелами.

20
00:02:16,380 --> 00:02:22,660
$ ./calc 5-7
-2

21
00:02:22,660 --> 00:02:31,040
$ ./calc 6/3
2

22
00:02:33,140 --> 00:02:39,290
Выглядит неплохо -- давайте попробуем разделить:

23
00:02:39,290 --> 00:02:44,410
$ ./calc 6/3
2

24
00:02:44,410 --> 00:02:53,390
$ ./calc 6/0
expr: division by zero

25
00:02:53,390 --> 00:02:58,510
$ ./calc 7/3
2

26
00:02:58,510 --> 00:03:05,069
Ага, понятно -- `expr` выполняет только целочисленные операции,

27
00:03:05,069 --> 00:03:13,690
и мы должны использовать другую операцию
 для получения остатка от деления:

28
00:03:13,690 --> 00:03:18,800
$ ./calc 7%3
1

29
00:03:20,500 --> 00:03:22,200
Но:

30
00:03:22,200 --> 00:03:32,420
$ ./calc 2 * 2
expr: syntax error

31
00:03:35,540 --> 00:03:45,380
Что неправильно? Да, это наш первый урок по устранению неполадок.

32
00:03:45,380 --> 00:03:46,540
Попробуем отладить:

33
00:03:46,540 --> 00:04:00,060
$ sh -x ./calc 2 * 2
 + expr 2 Makefile README.md calc 2
expr: syntax error

34
00:04:00,069 --> 00:04:11,629
О да! Звездочка -- это просто специальный символ соответствия Shell,
 в данном случае означающий --

35
00:04:11,629 --> 00:04:16,190
все файлы в текущем каталоге!

36
00:04:16,190 --> 00:04:23,060
И она заменяется всеми файлами из текущего каталога.

37
00:04:23,060 --> 00:04:24,500
Ну что ж, нам нужно это починить.

