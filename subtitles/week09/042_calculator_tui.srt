1
00:00:06,040 --> 00:00:08,060
OK -- the next example

2
00:00:08,060 --> 00:00:10,890
$ git checkout Example_4

3
00:00:14,480 --> 00:00:20,260
It seems strange -- the commit and comment

4
00:00:20,260 --> 00:00:31,739
are similar to the previous example.

5
00:00:31,739 --> 00:00:36,480
Let's check diff:

6
00:00:36,480 --> 00:00:53,329
$ git diff Example_3 Example_4

7
00:00:53,329 --> 00:01:03,140
Oh yeah -- I was wrong, I placed the tag incorrectly

8
00:01:03,140 --> 00:01:07,460
-- until the real changes!

9
00:01:07,460 --> 00:01:16,980
This is actually a good reason to take a deeper
look into our repository to fix this.

10
00:01:16,980 --> 00:01:22,960
First, let's move on to the next example:

11
00:01:22,960 --> 00:01:26,230
$ git checkout Example_5

12
00:01:32,950 --> 00:01:35,870
Ok -- seems differ.

13
00:01:35,870 --> 00:01:37,280
Now let's look to log:

14
00:01:37,280 --> 00:01:44,940
$ git log
commit f266a24128b1e363eddc073682aac89dd33a86a8
...
GUI
...
commit d6453c0c41548a55e3249ea8c3b788c71cb76f7e
...
Text UI.
...
commit d7f58c65c3e25269977538fdde0ac13d733fbf92
...

15
00:01:44,940 --> 00:01:59,280
We see another commit between the previously
discussed commit and the GUI commit -- the

16
00:01:59,280 --> 00:02:04,130
text interface.

17
00:02:04,130 --> 00:02:06,350
Let's switch to it:

18
00:02:06,350 --> 00:02:21,000
$ git checkout d6453c0c41548a55e3249ea8c3b788c71cb76f7e
...
Text UI.

19
00:02:21,000 --> 00:02:23,620
OK. And what about diff?

20
00:02:23,620 --> 00:02:36,879
$ git diff Example_3 d6453c0c41548a55e3249ea8c3b788c71cb76f7

21
00:02:33,360 --> 00:02:45,360
So, OK -- changed README, Makefile and added new file.

22
00:02:45,379 --> 00:02:52,260
$ ls
Makefile README.md calc calc_ui

23
00:02:52,260 --> 00:02:58,209
`calc_ui` script is the user interface

24
00:02:58,209 --> 00:03:01,829
for our simple command line calculator.

25
00:03:01,829 --> 00:03:03,569
Let's take a look inside:

26
00:03:03,569 --> 00:03:05,189
$ cat calc_ui

27
00:03:05,189 --> 00:03:09,559
First, we see setting environment variables

28
00:03:09,559 --> 00:03:11,950
for temporary files.

29
00:03:11,950 --> 00:03:24,219
Then we define an `end` function in which
we delete the temporary files and exit the

30
00:03:24,219 --> 00:03:25,230
program.

31
00:03:25,230 --> 00:03:40,529
The main action in the program is an infinite
loop, in which we just call a `dialog` program

32
00:03:40,529 --> 00:03:46,699
and then work with the results it returns.

33
00:03:46,699 --> 00:03:49,819
What is it `dialog`?

34
00:03:49,819 --> 00:03:54,760
To understand what it is, you first need to
install this program.

35
00:03:54,760 --> 00:04:01,959
By this way on RH-like systems:
$ sudo yum insatll dialog

36
00:04:01,959 --> 00:04:09,969
In Ubuntu, we have to install this program

37
00:04:09,969 --> 00:04:11,960
as follows:
$ sudo apt install dialog

38
00:04:11,969 --> 00:04:18,190
Now we just execute `dialog`:

39
00:04:18,190 --> 00:04:34,690
$ dialog

40
00:04:34,690 --> 00:04:47,450
We see a lengthy help that shows us which
parameters we should use to create various

41
00:04:47,450 --> 00:04:49,940
interface forms.

42
00:04:49,940 --> 00:04:51,680
For example:

43
00:04:51,680 --> 00:05:05,000
$ dialog --yesno "To be or not to be?" 5 25

44
00:05:10,720 --> 00:05:18,890
Make your choice and see the program exit
code:

45
00:05:18,890 --> 00:05:22,040
$ echo $?

46
00:05:22,040 --> 00:05:34,050
You will see zero if you choose 'yes' and

47
00:05:34,050 --> 00:05:36,170
non-zero if 'no'.

48
00:05:36,170 --> 00:05:46,560
As we understand it, this is a one-shot program
that shows us a uniform interface form and

49
00:05:46,560 --> 00:05:52,220
returns some result that we can use in our
script.

50
00:05:52,220 --> 00:06:19,720
In our UI we use the `--inputbox` form and
redirect the standard error from it to a temporary FILE1.

51
00:06:34,300 --> 00:06:42,470
What does standard error have to do with our
command?

52
00:06:42,470 --> 00:06:51,210
Hopefully we didn't expect any errors in a
line with our expression?

53
00:06:51,210 --> 00:07:00,500
Yes, but the standard output of the `dialog`
program is already in use for drawing the

54
00:07:00,500 --> 00:07:03,550
UI form.

55
00:07:03,550 --> 00:07:11,840
As far as we understand, to draw such pretty
forms, a bunch of ESC sequences for your terminal

56
00:07:11,840 --> 00:07:15,730
type are sent to standard output.

57
00:07:15,730 --> 00:07:24,080
These sequences, generated by the `ncurses`
library, are retrieved from a terminal type

58
00:07:24,080 --> 00:07:29,590
database according to the TTY environment
variable.

59
00:07:29,590 --> 00:07:38,360
To remember this look at "Under the Hood
-- text terminals command sets" lecture.

60
00:07:38,360 --> 00:07:50,900
Thus, if the dialog form ended with an error
exit code, it means that we clicked the "Cancel"

61
00:07:50,900 --> 00:07:57,110
button and then calling the "end" function.

62
00:07:57,110 --> 00:08:12,770
If we clicked OK, we perform the following
operation -- we send our ouput to our good

63
00:08:12,770 --> 00:08:25,470
old `calc` script and redirect the output
and error output to separate files.

64
00:08:25,470 --> 00:08:37,370
And then show a `dialog` form with the result
if the script completed successfully, and

65
00:08:37,370 --> 00:08:45,500
an error form if we received an error.

66
00:08:45,500 --> 00:08:50,149
So it looks good.

67
00:08:50,149 --> 00:09:00,319
And this is an example of the KISS design
principle -- we developed a simple script

68
00:09:00,319 --> 00:09:09,790
and just wrapped it with another simple script
that implements the UI.

69
00:09:09,790 --> 00:09:19,720
But for the final preparation of our application
for work, we need to install our `calc` script

70
00:09:19,720 --> 00:09:25,440
to the directory from the PATH environment
variable.

71
00:09:25,440 --> 00:09:33,000
And for this, we added a corresponding rule
to the Makefile:

72
00:09:33,000 --> 00:09:55,440
$ sudo make install
[sudo] password for liveuser:
install calc calc_ui /usr/local/bin

73
00:09:55,450 --> 00:10:07,510
Now let's play with our user friendly calculator:

74
00:10:07,510 --> 00:10:21,940
$ calc_ui

75
00:10:21,940 --> 00:10:22,310
Great!

