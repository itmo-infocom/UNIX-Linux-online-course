0:00:01.480,0:00:07.060
Speaking about the history of UNIX and Linux
we can recall the well-known saying -

0:00:07.060,0:00:11.860
we make our inventions stand on the shoulders
of giants

0:00:11.860,0:00:14.030
But we must understand

0:00:14.030,0:00:16.590
That many of those giants have failed

0:00:16.590,0:00:22.199
but such fails can be a good lesson

0:00:22.199,0:00:25.439
for new developers.

0:00:25.439,0:00:32.050
One of such giant was a MULTICS project.

0:00:32.050,0:00:35.960
The development of MULTICS began in

0:00:35.960,0:00:38.620
1965 as a research project

0:00:38.620,0:00:43.050
by MIT, General Electric and

0:00:43.050,0:00:46.969
Bell Labs to create a time sharing,

0:00:46.969,0:00:51.100
multi-processing and multi-user interactive
operating system.

0:00:51.100,0:00:58.780
After several years of development the enthusiasm
of the developers decreased more and more

0:00:58.780,0:01:03.519
as the system became more and more complex

0:01:03.519,0:01:10.580
and the prospects for completion of development
became less and less.

0:01:10.580,0:01:20.390
Bell Labs pulled out of the project 1969;

0:01:20.390,0:01:27.210
but some of the people who worked on it got
a lot of experience

0:01:27.210,0:01:33.820
Among them were Ken Thompson and Dennis Ritchie
of Bell Labs,

0:01:33.820,0:01:36.970
the inventors of the UNIX operating system

0:01:36.970,0:01:39.750
It's funny,

0:01:39.750,0:01:49.070
but the history of Unix systems is closely
related to computer games

0:01:49.070,0:01:55.040
It started in 1969

0:01:55.040,0:02:02.780
When Ken Thompson discovered an old PDP7 computer
in a dark corner of the lab

0:02:02.780,0:02:07.690
and wanted to use it to play Space Travel
game.

0:02:07.690,0:02:10.659
There was little to do --

0:02:10.659,0:02:16.049
an operating system had to be written to run
it.

0:02:16.049,0:02:18.709
And he did it --

0:02:18.709,0:02:25.840
at midnight on January 1st, 1970,

0:02:25.840,0:02:29.230
the Unix epoch began.

0:02:29.230,0:02:30.950
From this time on,

0:02:30.950,0:02:34.530
all clocks in UNIX-like system

0:02:34.530,0:02:37.219
count down that time,

0:02:37.219,0:02:41.239
including your mobile phone.

0:02:41.239,0:02:47.870
Originally It was a single tasking operating
system

0:02:47.870,0:02:49.379
written in assembly language

0:02:49.379,0:02:54.920
that was loaded from paper tapes and

0:02:54.920,0:03:13.680
called UNICS as opposed to the complexity
of MULTICS.

0:03:13.680,0:03:19.319
And then the team of Ken Thompson and Dennis
Ritchie

0:03:19.319,0:03:24.560
received a new Digital Equipment Corporation
PDP11 computer

0:03:24.560,0:03:31.709
to develop a word processing system for the
Bell Labs patent department.

0:03:31.709,0:03:35.730
For the first three months

0:03:35.730,0:03:39.709
the machine sat in a corner,

0:03:39.709,0:03:47.139
enumerating all the closed Knight's tours
on a 6Ã—8 chess board --

0:03:47.139,0:03:54.599
just became the hard drive wasn't shipped
with a super new computer.

0:03:54.599,0:03:55.599
This time

0:03:55.599,0:04:02.019
could be used to choose a programming language,

0:04:02.019,0:04:07.499
because it was a computer with a completely
new architecture

0:04:07.499,0:04:15.690
and programs written on PDP7 assembler was
not useful for it.

0:04:15.690,0:04:19.510
And most interesting was the concept

0:04:19.510,0:04:27.670
of another project used in some research and
development projects including MULTICS -- BCPL.

0:04:27.670,0:04:37.160
It was a high-level programming language focused
on portability.

0:04:37.160,0:04:44.480
Most of this language was written in the language
itself,

0:04:44.480,0:04:50.220
and only a small machine dependent part was
written in assembly.

0:04:50.220,0:04:57.810
To support a new machine, only 1/5 of the
computer code

0:04:57.810,0:05:00.730
needed to be rewritten,

0:05:00.730,0:05:06.280
which usually took 2-5 man-months.

0:05:06.280,0:05:12.590
Thompson used the same concept

0:05:12.590,0:05:21.280
when writing his simplified successor to BCPL,
language B.

0:05:21.280,0:05:23.340
This language was

0:05:23.340,0:05:28.340
not very expressive and effective on the PDP11.

0:05:28.340,0:05:33.870
And in 1971

0:05:33.870,0:05:43.380
Ritchie started to improve B, which resulted
to created a new language C.

0:05:43.380,0:05:50.910
In 1973 the UNIX kernel was refactored on
C language

0:05:50.910,0:05:55.150
to follow the same concept of portability
--

0:05:55.150,0:05:59.250
most of the code was machine independent.

0:05:59.250,0:06:03.270
The system was distributed in source code
among

0:06:03.270,0:06:07.280
universities for a nominal fee, which served

0:06:07.280,0:06:09.160
as an explosive growth

0:06:09.160,0:06:14.240
on its popularity in 80s.

0:06:14.240,0:06:18.310
Almost all the developers of new computer
systems

0:06:18.310,0:06:32.160
Science this period have used UNIX as the
base platform for very new developments.

0:06:32.160,0:06:50.980
One of the 
most famous of these

0:06:50.980,0:06:57.080
Is the Berkeley Software Distribution (BSD)
developed

0:06:57.080,0:07:00.440
at the University of California, Berkeley

0:07:00.440,0:07:05.960
based on Unix version 6 with

0:07:05.960,0:07:09.710
its own copyleft license.

0:07:09.710,0:07:16.340
And most of the hardware vendors of the 80s

0:07:16.340,0:07:24.200
used BSD as the base operating system for
their new computers.

0:07:24.200,0:07:30.180
Unix was not a significant part of at Bell
Laboratories business,

0:07:30.180,0:07:33.910
and it was not a problem for them.

0:07:33.910,0:07:40.250
But in the 1980s Bell Labs

0:07:40.250,0:07:47.800
split into several companies as a result of
an anti-trust law suite against AT&T.

0:07:47.800,0:07:55.500
The new UNIX System Laboratories company was
created and the new UNIX System 5

0:07:55.500,0:07:58.870
specification was developed.

0:07:58.870,0:08:03.840
Unix was that main business of this company,

0:08:03.840,0:08:11.150
and they were very aggressive in pushing the
new standard in the market.

0:08:11.150,0:08:16.340
And that has been the cause of Unix wars

0:08:16.340,0:08:21.240
against non-commercial developers including
BSD.

0:08:21.240,0:08:22.860
The commercialization

0:08:22.860,0:08:26.130
of Unix system market

0:08:26.130,0:08:28.870
and the move

0:08:28.870,0:08:32.339
to a closed development and

0:08:32.339,0:08:33.969
distribution model

0:08:33.969,0:08:37.870
has led to an

0:08:37.870,0:08:39.749
alternative movement --

0:08:39.749,0:08:42.120
the GNU.

0:08:42.120,0:08:43.140
What is GNU?

0:08:43.140,0:08:48.430
You know it's such an African animal.

0:08:48.430,0:08:56.339
But also it is a self-referential abbreviation

0:08:56.339,0:09:26.379
"GNU is Not Unix".

0:09:26.379,0:09:32.839
Richard Stallman founded the project in 1978

0:09:32.839,0:09:34.069
at MIT.

0:09:34.069,0:09:39.939
The GNU project is a mass collaborative initiative

0:09:39.939,0:09:43.209
for the development of free software.

0:09:43.209,0:09:45.720
The first goal of this project

0:09:45.720,0:09:49.399
was to develop a set of programs

0:09:49.399,0:09:58.029
similar to the standard set of utilities in
UNIX.

0:09:58.029,0:10:01.240
And in 1991

0:10:01.240,0:10:07.490
a Finnish student Linus Torvalds created his
own operating system kernel,

0:10:07.490,0:10:12.189
which is compatible with a UNIX operating
system,

0:10:12.189,0:10:13.649
called Linux

0:10:13.649,0:10:16.879
As he said later,

0:10:16.879,0:10:18.860
"Just for fun".

0:10:18.860,0:10:23.259
The Linux kernel, combined with the

0:10:23.259,0:10:26.899
set of utilities from the GNU project,

0:10:26.899,0:10:34.980
served as the basis for creating a complete
operating system, comparable in

0:10:34.980,0:10:40.009
capabilities to commercial UNIX systems, and
usually even

0:10:40.009,0:10:41.620
superior to them.

