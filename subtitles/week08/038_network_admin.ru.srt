1
00:00:05,120 --> 00:00:12,800
Ну и, наконец, давайте обсудим административные задачи,
 связанные с сетью. В большинстве случаев

2
00:00:14,080 --> 00:00:22,320
после установки системы у вас есть более или менее
 настроенная сеть в соответствии с настройками DHCP

3
00:00:22,320 --> 00:00:37,920
вашей локальной сети. Самое большее, что вам нужно, --
 это установить пароль для вашего Wi-Fi.

4
00:00:40,560 --> 00:00:49,920
Но в некоторых случаях было бы полезно
 иметь некоторые утилиты для просмотра

5
00:00:51,120 --> 00:00:58,080
и управления настройками сети. В отличие
 от других устройств, сетевые интерфейсы

6
00:00:58,080 --> 00:01:06,240
не имеют собственных представлений в файлах устройств в каталоге /dev.

7
00:01:08,240 --> 00:01:12,880
Работать с ними можно только с помощью специальных утилит.

8
00:01:12,880 --> 00:01:29,200
Традиционный набор утилит для настройки сети:
* `ifconfig` -- для настройки сетевого интерфейса

9
00:01:29,200 --> 00:01:38,720
* и` route` -- который показывает/управляет таблицей IP-маршрутизации.

10
00:01:39,600 --> 00:01:41,840
Без аргументов ifconfig просто показывает

11
00:01:52,560 --> 00:02:02,200
текущее состояние включенных сетевых интерфейсов.

12
00:02:02,800 --> 00:02:10,800
Указывая на сетевой интерфейс, мы можем
 «поднимать» и «опускать» их, мы также можем

13
00:02:17,120 --> 00:02:24,880
вручную установить IP-адрес и сетевую маску

14
00:02:24,880 --> 00:02:28,440
для такого интерфейса.

15
00:02:29,040 --> 00:02:35,840
Мы можем использовать утилиту `route`

16
00:02:42,720 --> 00:02:49,840
для работы с таблицей маршрутизации. Чтобы просмотреть
 таблицу маршрутов, мы можем запустить команду:

17
00:02:49,840 --> 00:02:50,427
$ route -n

18
00:02:50,427 --> 00:02:54,672
Параметр '-n' показывает числовые адреса

19
00:02:54,672 --> 00:03:04,240
вместо того что бы пытаться определить символьные имена хостов.
 Это может быть полезно, если у вас возникают проблемы

20
00:03:04,240 --> 00:03:09,680
с доступом к DNS-серверу.

21
00:03:16,080 --> 00:03:25,680
С помощью этой команды мы можем добавлять и удалять
 маршруты к хостам и сетям. Мы можем установить к ним шлюзы.

22
00:03:28,320 --> 00:03:38,960
В современных дистрибутивах Linux эти `net-tools` устарели
 и не устанавливаются по умолчанию.

23
00:03:39,920 --> 00:03:49,840
Происходит переход на более универсальную утилиту `ip`,
 которая также поддерживает более продвинутые

24
00:03:51,520 --> 00:04:01,000
сетевые параметры, чем `net-tools`.

25
00:04:04,720 --> 00:04:06,080
Вы можете использовать

26
00:04:13,840 --> 00:04:34,400
`ip link` для выполнения тех же задач, что и `ifconfig`,

27
00:04:41,280 --> 00:04:43,223
и `ip route` для замены route.

28
00:04:46,457 --> 00:04:49,200
Следующей важной задачей при настройке сети

29
00:04:50,400 --> 00:05:09,840
является настройка DNS-резолвинга. Эта конфигурация

30
00:05:11,600 --> 00:05:13,963
находится в `/etc/resolv.conf`.

31
00:05:18,320 --> 00:05:28,434
Здесь мы можем настроить до трёх серверов имен.

32
00:05:28,640 --> 00:05:34,160
Также, используя опцию конфигурации `search`, мы можем

33
00:05:36,400 --> 00:05:40,240
настроить домены, в которых будет выполняться поиск по коротким именам.

34
00:05:40,240 --> 00:05:46,080
И, наконец, несколько слов

35
00:05:46,640 --> 00:05:53,640
о регулировании сетевого доступа к вашему компьютеру.
 Как мы понимаем, наиболее опасными

36
00:05:53,640 --> 00:06:05,840
на данный момент являются сетевые атаки. И самый известный
 инструмент для ограничения доступа -- это файрволл.

37
00:06:08,720 --> 00:06:22,160
На нижнем уровне брандмауэр в Linux управляется утилитой `iptables`,
 который теперь заменяется на` nftables`.

38
00:06:23,760 --> 00:06:30,080
Но на более высоком уровне им в разных дистрибутивах

39
00:06:30,640 --> 00:06:38,520
управляют различные системы:
* Canonical’s Uncomplicated Firewall (`ufw`)

40
00:06:43,600 --> 00:06:50,800
для настройки iptables в системах Ubuntu и Debian.

41
00:06:52,400 --> 00:07:04,800
Брандмауэр не включен по умолчанию в Ubuntu
 и не установлен по умолчанию в Debian.

42
00:07:04,800 --> 00:07:12,960
Как следует из названия, его несложно настроить и поддерживать.
 Он имеет легко запоминающийся синтаксис,

43
00:07:13,760 --> 00:07:20,800
более удобный для пользователей, чем основные правила `iptables`.

44
00:07:20,800 --> 00:07:43,840
* Fedora и Red Hat Enterprise Linux по умолчанию включают
 Firewall Daemon (FirewallD).

45
00:07:47,600 --> 00:07:58,080
Его интерфейс `firewall-cmd` имеет почти тот же
 набор функций для базового управления брандмауэром,

46
00:07:59,520 --> 00:08:11,840
что и` ufw`, и добавляет к нему управление сетевыми зонами.

47
00:08:13,360 --> 00:08:19,520
Управление зоной позволяет настроить предустановки
 с правилами для различных

48
00:08:20,880 --> 00:08:26,480
сетевых окружений/местоположений. Например, «Дом» и «Офис»,

49
00:08:27,120 --> 00:08:35,600
где разрешена вся связь с локальными машинами,
 и «Общедоступный Wi-Fi»,

50
00:08:37,120 --> 00:08:46,720
где связь с текущей подсетью не разрешена. Правила могут применяться автоматически для каждого сетевого интерфейса

51
00:08:46,720 --> 00:08:57,440
или настраиваться через NetworkManager и сетевой
 графический интерфейс GNOME `system-config-firewall`.

52
00:08:57,440 --> 00:09:03,840
Оба интерфейса поставляются с предопределенными
 правилами для общих серверных служб и протоколов.

53
00:09:04,400 --> 00:09:11,760
Эти правила включают ключевое слово/имя
 в соответствии с отраслевыми стандартами

54
00:09:12,480 --> 00:09:24,880
и порты по умолчанию для публичного запуска служб.
 Каждый из них имеет свои собственные форматы,

55
00:09:25,760 --> 00:09:38,560
которые, конечно, несовместимы друг с другом. 
ufw использует служебные файлы,

56
00:09:39,440 --> 00:09:51,360
содержащие одну строку с портом и протоколом, а FirewallD
 использует шесть строк XML для создания того же профиля.

57
00:09:52,720 --> 00:10:04,240
Лучшая политика -- просто закрыть все службы
 для доступа из Интернет, которые на компьютере не нужны,

58
00:10:04,240 --> 00:10:12,480
и открывать только те, которые нужны
 для удаленного доступа. Например -- SSH.

59
00:10:13,280 --> 00:10:31,840
А затем просто используйте более легкий инструмент настройки --
 файлы управления доступом к хосту:

60
00:10:39,040 --> 00:10:49,760
это конфигурация для так называемой «TCP Wrapper»,
 которая изначально была разработана

61
00:10:49,760 --> 00:10:58,240
как служба `tcpd` для суперсервера` inetd`,
 а теперь ее функциональность включена

62
00:10:58,960 --> 00:11:05,760
в библиотеку libwrap, которая используется
 несколькими сетевыми службами, такими как NFS.

63
00:11:06,320 --> 00:11:19,040
Опять же, самый простой способ -- отключить все
 в конфигурационном файле `/etc/hosts.deny`

64
00:11:20,640 --> 00:11:31,200
и разрешить доступ к вашему компьютеру
 только фиксированному списку хостов, например,

65
00:11:35,040 --> 00:11:40,160
через SSH в `/etc/hosts.allow`. Использовать этот механизм
 проще, чем использовать брандмауэр,

66
00:11:40,160 --> 00:11:44,960
потому что все изменения вступают в силу сразу после сохранения

67
00:11:44,960 --> 00:11:51,720
файла конфигурации -- вам не нужно перенастраивать
 и перезагружать какие-либо службы.

68
00:11:51,720 --> 00:11:58,880
А если говорить о старых классических системах,

69
00:11:58,880 --> 00:12:10,160
то tcp_wrapper `tcpd` настраивается через сервис` inetd`. 

70
00:12:14,080 --> 00:12:19,680
Как мы увидим, это так называемый суперсервер,
 призванный облегчить жизнь разработчикам сетей.

71
00:12:21,040 --> 00:12:29,360
Чтобы создать серверную часть сетевого приложения,

72
00:12:29,360 --> 00:12:39,280
просто нужно разработать приложение, которое читает
 стандартный ввод и записывает его в стандартный вывод,

73
00:12:40,960 --> 00:12:48,720
а также записывает конфигурацию службы в файл конфигурации `inetd`.

74
00:12:48,720 --> 00:12:56,560
Всю работу по прослушиванию сетевых сокетов
 и поддержанию соединения делает для вас суперсервер.

75
00:12:57,600 --> 00:13:11,520
Классические службы, такие как FTP, почтовая рассылка POP3 и TELNET,
 были разработаны для работы с inetd.

76
00:13:12,560 --> 00:13:18,960
Также можно настроить HTTP-сервер для доступа через `inetd`.

77
00:13:21,280 --> 00:13:27,520
В новых системах `inetd` заменен на `xinetd`, который обеспечивает

78
00:13:27,520 --> 00:13:40,160
лучшую защиту от DOS-атак, а в новейших системах -- на `systemd`.

