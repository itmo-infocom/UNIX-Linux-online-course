1
00:00:05,300 --> 00:00:14,850
Переменные окружения -- это один из простейших
 механизмов межпроцессного взаимодействия.

2
00:00:14,850 --> 00:00:21,220
Давайте обсудим некоторые наиболее часто используемые
 системные переменные, которые предопределены

3
00:00:21,220 --> 00:00:22,750
для использования различными программами.

4
00:00:22,750 --> 00:00:36,180
Наиболее важные из них:
* USER -- имя пользователя.

5
00:00:36,180 --> 00:00:41,519
* HOME -- домашний каталог.

6
00:00:41,519 --> 00:00:51,469
* SHELL -- домашний shell пользователя.

7
00:00:51,469 --> 00:01:09,180
* PS1 -- это первичная подсказка для shell-подобных
 или cshell-подобных оболочек, которая выводится

8
00:01:09,180 --> 00:01:11,520
на стандартный вывод.

9
00:01:11,520 --> 00:01:20,610
* PS2 -- это вторичная подсказка, которая интерактивно отображается

10
00:01:20,610 --> 00:01:27,160
в случае перевода строки в незавершённой команде.

11
00:01:27,160 --> 00:01:39,670
Названия этих переменных более или менее говорят сами за себя,
 но некоторые часто используемые переменные не так очевидны,

12
00:01:39,670 --> 00:01:44,610
 особенно если рассматривать их с точки зрения безопасности и юзабилити:

13
00:01:45,610 --> 00:02:02,300
PATH -- это список каталогов, в которых
 осуществляется поиск исполняемых файлов.

14
00:02:02,300 --> 00:02:05,840
Идея эта зародилась в проекте Multics.

15
00:02:05,840 --> 00:02:14,010
Это список каталогов, разделённых двоеточиями.

16
00:02:14,010 --> 00:02:21,510
В csh переменная PATH представляется в виде
 списка каталогов, разделённых пробелами 

17
00:02:21,510 --> 00:02:26,939
и заключённых в круглые скобки.

18
00:02:26,939 --> 00:02:36,340
Как вы может быть знаете, в Windows имеется такая же
 переменная окружения, но с полями,

19
00:02:36,340 --> 00:02:40,099
разделёнными точкой с запятой.

20
00:02:40,099 --> 00:02:47,730
И это не единственное различие между UNIX и Windows PATH.

21
00:02:47,730 --> 00:02:57,760
В Windows у вас есть каталог, в котором производится
 поиск исполняемых файлов, -- текущий каталог.

22
00:02:57,769 --> 00:03:02,549
Но в UNIX или Linux это не так.

23
00:03:02,549 --> 00:03:03,799
Но почему?

24
00:03:03,799 --> 00:03:08,099
Вроде это так удобно...

25
00:03:08,099 --> 00:03:18,909
И в давние-давние времена нормальной ситуацией было,
 когда PATH начинался с точки -- текущего каталога.

26
00:03:18,909 --> 00:03:28,440
Но давайте представим себе ситуацию:
 пользователь по прозванию, например "badguy" (плохиш), 

27
00:03:28,440 --> 00:03:35,980
загрузил кучу кинофильмов в свой домашний каталог
 вашего лабораторного компьютера 

28
00:03:35,980 --> 00:03:40,689
и забил весь диск.

29
00:03:40,689 --> 00:03:52,469
Вы пока новичок в системном администрировании
 и ещё не знаете о дисковых квотах и прочей магии,

30
00:03:52,469 --> 00:04:02,540
позволяющей ограничить использование дискового пространства,
 но вы знаете, как запустить анализатор дискового пространства,

31
00:04:02,540 --> 00:04:04,469
для того что бы найти источник проблемы.

32
00:04:04,469 --> 00:04:14,459
Вы опознали домашний его каталог в качестве
 главного пожирателя дискового пространства

33
00:04:14,459 --> 00:04:33,500
и переходите в этот каталог, что бы поглядеть, что внутри.

34
00:04:33,500 --> 00:04:47,890
Вы запускаете стандартную программу 'ls' для получения
 списка файлов и каталогов в домашнем каталоге badguy'я.

35
00:04:49,100 --> 00:05:02,380
Но он таки настоящий плохиш -- он в своём домашнем каталоге
 смастерил исполняемый файл с названием 'ls'

36
00:05:02,380 --> 00:05:08,870
и в нём написал только одну команду.

37
00:05:16,350 --> 00:05:28,370
Что означает -- удалить все файлы и каталоги
 во всей файловой системе, начиная

38
00:05:28,370 --> 00:05:35,350
с корневого каталога, без каких-либо вопросов и подтверждений.

39
00:05:35,350 --> 00:05:47,560
Этот парень не может этого сделать сам -- ведь он же
 обычный пользователь, и у него на это просто нет прав,

40
00:05:47,560 --> 00:05:57,940
но он угробил целую файловую систему вашими руками --
 суперюзеровскими руками сисадмина.

41
00:05:57,950 --> 00:06:06,660
Посему, это плохая идея -- включать точку в ваш PATH, особенно если вы

42
00:06:06,660 --> 00:06:09,190
являетесь суперпользователем.

43
00:06:10,190 --> 00:06:12,700
IFS -- разделитель полей при вводе.

44
00:06:12,700 --> 00:06:22,440
Переменная IFS может устанавливаться для разделения
 слов при вводе. По умолчанию -- пробелы,

45
00:06:22,440 --> 00:06:26,420
табуляции или новая строка.

46
00:06:26,420 --> 00:06:31,560
Эта возможность может быть полезна для некоторых хитрых shell-скриптов.

47
00:06:31,560 --> 00:06:37,310
Однако, она может быть и причиной неожиданных неприятностей.

48
00:06:37,310 --> 00:06:48,460
Установив в переменной IFS символ слэша как разделителя,
 злоумышленник может заставить файл оболочки или программу

49
00:06:48,460 --> 00:06:50,810
выполнить команды, которых мы не ожидаем.

50
00:06:50,810 --> 00:06:58,740
По счастью, большинство современных shell-интерпретаторов
 при вызове сбрасывают значение IFS

51
00:06:58,740 --> 00:07:01,380
на стандартный набор символов.

52
00:07:01,380 --> 00:07:08,800
Итак -- переменная TERM.

53
00:07:08,800 --> 00:07:13,860
TERM -- это тип используемого терминала.

54
00:07:13,860 --> 00:07:24,030
Переменная окружения TERM обычно содержит имя типа терминала, консоли

55
00:07:24,030 --> 00:07:29,680
или устройства вывода, которое вы используете.

56
00:07:29,680 --> 00:07:37,360
Эта информация критически важна для всех полноэкранных программ, например для текстового редактора.

57
00:07:37,370 --> 00:07:45,990
Существует множество типов терминалов,
 разработанных разными поставщиками, от изобретения

58
00:07:45,990 --> 00:07:57,680
полноэкранных текстовых терминалов в конце 1960-х годов
 до эпохи графических интерфейсов в середине 1980-х.

59
00:07:57,680 --> 00:08:04,130
Сейчас это может быть выглядит не столь важным, но в некоторых случаях, когда вы используете тот или иной инструмент

60
00:08:04,130 --> 00:08:12,120
для удаленного доступа к системе UNIX/Linux,
 у вас могут возникнуть странные проблемы.

61
00:08:12,120 --> 00:08:21,000
В большинстве случаев доступ к текстовым интерфейсам
 используется, например, через SSH, telnet или через

62
00:08:21,000 --> 00:08:26,140
последовательный порт, поскольку для это требуется меньше трафика.

63
00:08:26,140 --> 00:08:32,780
Но в некоторых комбинациях клиентских программ
 и серверных операционных систем вы можете

64
00:08:32,780 --> 00:08:43,259
увидеть совершенно неадекватное поведение
 полноэкранных текстовых приложений, таких как текстовый редактор.

65
00:08:43,259 --> 00:08:55,440
Это может проявляться как неправильное отображение
 экрана редактора или неправильная реакция на нажатия клавиш.

66
00:08:55,440 --> 00:08:59,240
И это следствие неправильной настройки терминала.

67
00:08:59,240 --> 00:09:06,800
Самый простой способ решить эту проблему -- установить переменную TERM.

68
00:09:06,800 --> 00:09:29,889
Просто попробуйте установить для них тип «ansi» или «vt100»,
 потому что это наиболее часто используемые типы

69
00:09:29,889 --> 00:09:34,750
эмуляции терминала в этих клиентах.

70
00:09:34,750 --> 00:09:40,210
Более подробную информацию о механизмах работы
 с экранами терминала вы можете найти в лекции

71
00:09:40,210 --> 00:09:43,680
«Под капотом -- наборы команд текстовых терминалов».

72
00:09:43,680 --> 00:09:55,240
Другие переменные, связанные с настройками терминала -- LINES и COLUMNS.
* LINES -- это количество строк, которые уместятся

73
00:09:55,240 --> 00:09:56,240
на экране.

74
00:09:56,240 --> 00:09:59,430
* COLUMNS -- количество символов, которые помещаются в столбце.

75
00:09:59,430 --> 00:10:07,639
И переменные, связанные с редактированием:
* EDITOR -- редактор по умолчанию, потому что в UNIX-подобных системах

76
00:10:07,639 --> 00:10:12,129
существует множество редакторов.

77
00:10:12,129 --> 00:10:17,759
* VISUAL -- режим редактирования командной строки.

78
00:10:17,759 --> 00:10:28,339
Некоторые настройки для персонализации вашей среды:
* LANG -- это настройка языка.

79
00:10:28,339 --> 00:10:33,069
* TZ -- временнАя зона.

80
00:10:33,069 --> 00:10:40,970
И несколько примеров настроек для конкретных приложений:

81
00:10:40,970 --> 00:10:49,800
* DISPLAY указывает на сервер X-Window для подключения
 графических приложений к пользовательскому интерфейсу.

82
00:10:49,800 --> 00:10:56,540
* LPDEST -- это принтер по умолчанию, если эта переменная
 не задана, используются системные настройки.

83
00:10:56,540 --> 00:11:02,120
* MANPATH -- это список каталогов, в которых
 производится поиск файлов системного руководства.

84
00:11:02,120 --> 00:11:13,740
* PAGER -- это команда, используемая программой man
 для просмотра чего-либо, например страниц руководства. И многие другие.

