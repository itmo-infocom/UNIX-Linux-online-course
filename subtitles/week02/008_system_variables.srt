1
00:00:05,300 --> 00:00:14,850
Environment variables are one of the simplest
mechanisms for interprocess communication.

2
00:00:14,850 --> 00:00:21,220
Let's discuss some of the most commonly used
system variables that are predefined for use

3
00:00:21,220 --> 00:00:22,750
by many programs.

4
00:00:22,750 --> 00:00:36,180
The most basic ones are:
* USER is user name.

5
00:00:36,180 --> 00:00:41,519
* HOME is the home directory.

6
00:00:41,519 --> 00:00:51,469
* SHELL is the user's home shell.

7
00:00:51,469 --> 00:01:09,180
* PS1 for shell-like or cshell-like shells
is the primary shell prompt, printed interactively

8
00:01:09,180 --> 00:01:11,520
to standard output.

9
00:01:11,520 --> 00:01:20,610
* PS2 is a secondary prompt that is issued
interactively to standard output when a line

10
00:01:20,610 --> 00:01:27,160
feed is entered in an incomplete command.

11
00:01:27,160 --> 00:01:39,670
All of these variables are more or less self-explanatory,
but some commonly used variables are not that

12
00:01:39,670 --> 00:01:44,610
simple, especially in terms of security and
usability:

13
00:01:45,610 --> 00:02:02,300
PATH is a list of directories to look for when
executable files searching.

14
00:02:02,300 --> 00:02:05,840
The origin of this idea comes from the Multics
project.

15
00:02:05,840 --> 00:02:14,010
This is a colon-separated list of directories.

16
00:02:14,010 --> 00:02:21,510
The csh path is initialized by setting the
variable PATH with a list of space-separated

17
00:02:21,510 --> 00:02:26,939
directory names enclosed in parentheses.

18
00:02:26,939 --> 00:02:36,340
As you probably know, on Windows you have
the same environment variable but with fields

19
00:02:36,340 --> 00:02:40,099
separated by semicolons.

20
00:02:40,099 --> 00:02:47,730
But this is not only the difference between
UNIX-like and Windows PATHes.

21
00:02:47,730 --> 00:02:57,760
On Windows, you have a default directory to
search for executable files -- the current directory.

22
00:02:57,769 --> 00:03:02,549
But on UNIX or Linux, not.

23
00:03:02,549 --> 00:03:03,799
But why?

24
00:03:03,799 --> 00:03:08,099
It seems so useful.

25
00:03:08,099 --> 00:03:18,909
And long long ago it was normal to have a
PATH that started with dot, the current directory.

26
00:03:18,909 --> 00:03:28,440
But let's imagine this situation: a user with
a name, for ex. "badguy", 

27
00:03:28,440 --> 00:03:35,980
has downloaded many movies in his
home directory to your university lab computer

28
00:03:35,980 --> 00:03:40,689
and filled up an entire disk.

29
00:03:40,689 --> 00:03:52,469
You are a very novice sysadmin and do not
know about disk quotas or any another magic

30
00:03:52,469 --> 00:04:02,540
for limiting disk space usage, but you know
how to run disk analyzer to find the source

31
00:04:02,540 --> 00:04:04,469
of the problem.

32
00:04:04,469 --> 00:04:14,459
You found this guy's home directory as the
primary eater of disk space and changed directory

33
00:04:14,459 --> 00:04:33,500
to this one to look inside.

34
00:04:33,500 --> 00:04:47,890
You call the standard command 'ls' for listing
of files or directories in badguy's home directory:

35
00:04:49,100 --> 00:05:02,380
But he's a really bad guy -- he created an
executable named 'ls' in his home directory

36
00:05:02,380 --> 00:05:08,870
and wrote in it only one command:

37
00:05:16,350 --> 00:05:28,370
Which means - delete all files and directories
in the entire file system, starting from the

38
00:05:28,370 --> 00:05:35,350
root directory, without any questions or confirmations.

39
00:05:35,350 --> 00:05:47,560
This guy cannot do it himself, since he, as
an ordinary user, has no rights to do this,

40
00:05:47,560 --> 00:05:57,940
but he destroys the entire file system with your hands --
the superuser's hands of the sysadmin.

41
00:05:57,950 --> 00:06:06,660
Because of this, it is a bad idea to include
a dot in your search PATH, especially if you

42
00:06:06,660 --> 00:06:09,190
are a superuser.

43
00:06:10,190 --> 00:06:12,700
IFS - Input field Separators.

44
00:06:12,700 --> 00:06:22,440
The IFS variable can be set to indicate what
characters separate input words -- by default space,

45
00:06:22,440 --> 00:06:26,420
tab or new line.

46
00:06:26,420 --> 00:06:31,560
This feature can be useful for some tricky
shell scripts.

47
00:06:31,560 --> 00:06:37,310
However, the feature can cause unexpected
damage.

48
00:06:37,310 --> 00:06:48,460
By setting IFS to use slash sign as a separator,
an attacker could cause a shell file or program

49
00:06:48,460 --> 00:06:50,810
to execute unexpected commands.

50
00:06:50,810 --> 00:06:58,740
Fortunately, most modern versions of the shell
will reset their IFS value to a normal set

51
00:06:58,740 --> 00:07:01,380
of characters when invoked.

52
00:07:01,380 --> 00:07:08,800
So, the TERM variable.

53
00:07:08,800 --> 00:07:13,860
TERM is the type of terminal used.

54
00:07:13,860 --> 00:07:24,030
The environment variable TERM should normally
contain the type name of the terminal, console

55
00:07:24,030 --> 00:07:29,680
or display-device type you are using.

56
00:07:29,680 --> 00:07:37,360
This information is critical for all text
screen-oriented programs, for example text editor.

57
00:07:37,370 --> 00:07:45,990
There are many types of terminals developed
by different vendors, from the invention of

58
00:07:45,990 --> 00:07:52,650
full screen text terminals in the late 1960s
to the era of graphical interfaces in the

59
00:07:52,650 --> 00:07:57,680
mid 1980s.

60
00:07:57,680 --> 00:08:04,130
It doesn't look very important now, but in
some cases, when you use one or another tool

61
00:08:04,130 --> 00:08:12,120
to access a UNIX/Linux system remotely, you
may have strange problems.

62
00:08:12,120 --> 00:08:21,000
In most cases, access to the text interfaces
is used, for example, via SSH, telnet or serial

63
00:08:21,000 --> 00:08:26,140
line, since it requires less traffic.

64
00:08:26,140 --> 00:08:32,780
But in some combinations of client programs
and server operating systems, you may see

65
00:08:32,780 --> 00:08:43,259
completely inappropriate behavior of full-screen
text applications such as a text editor.

66
00:08:43,259 --> 00:08:55,440
This could be incorrect display of the editor
screen or incorrect response to keystrokes.

67
00:08:55,440 --> 00:08:59,240
And this is a consequence of incorrect terminal
settings.

68
00:08:59,240 --> 00:09:06,800
The easiest way to solve this problem is to
set the TERM variable.

69
00:09:06,800 --> 00:09:29,889
Just try setting them to type "ansi" or "vt100",
because these are the most commonly used types

70
00:09:29,889 --> 00:09:34,750
of terminal emulation in these clients.

71
00:09:34,750 --> 00:09:40,210
More information about terminal's screen handling
machinery you can find in the "Under the

72
00:09:40,210 --> 00:09:43,680
Hood -- text terminals command sets" lecture.

73
00:09:43,680 --> 00:09:55,240
Other variables related to terminal settings -- LINES and COLUMNS
* LINES is the number of lines to fit on the

74
00:09:55,240 --> 00:09:56,240
screen.

75
00:09:56,240 --> 00:09:59,430
* COLUMNS -- the number of characters that
fit in the column.

76
00:09:59,430 --> 00:10:07,639
And the variables related to editing:
* EDITOR is the default editor because there

77
00:10:07,639 --> 00:10:12,129
are many editors for UNIX-like systems.

78
00:10:12,129 --> 00:10:17,759
* VISUAL -- command line editing mode.

79
00:10:17,759 --> 00:10:28,339
Some settings to personalize your environment:
* LANG is the language setting.

80
00:10:28,339 --> 00:10:33,069
* TZ is the time zone.

81
00:10:33,069 --> 00:10:40,970
And some examples of application specific
settings:

82
00:10:40,970 --> 00:10:49,800
* DISPLAY points to an X-Window Server for connecting
 graphical applications to the user interface.

83
00:10:49,800 --> 00:10:56,540
* LPDEST is the default printer, if this variable
is not set, system settings are used.

84
00:10:56,540 --> 00:11:02,120
* MANPATH is a list of directories to look
for when searching for system manual files

85
00:11:02,120 --> 00:11:13,740
* PAGER is the command used by 'man' program to view
something, manual pages for example. And many others.

