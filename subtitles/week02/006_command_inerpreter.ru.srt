1
00:00:06,160 --> 00:00:17,070
Первые символы, которые вы видите
 в начале строки после входа в систему

2
00:00:17,070 --> 00:00:24,019
и получения доступа к интерфейсу командной строки,
 -- это так называемая подсказка Shell.

3
00:00:24,019 --> 00:00:28,840
Подсказка служит приглашением для ввода команд.

4
00:00:28,840 --> 00:00:38,649
В простейшем случае -- в Bourne shell -- это просто
 знак доллара для обычного пользователя

5
00:00:38,649 --> 00:00:44,120
и знак диеза (решетка) для суперпользователя.

6
00:00:44,120 --> 00:00:53,980
В новых шеллах это может быть довольно сложная конструкция
 с хостом и именем пользователя, текущим каталогом

7
00:00:53,980 --> 00:00:55,649
и так далее.

8
00:00:55,649 --> 00:01:01,300
Но значения доллара и решетки сохраняются.

9
00:01:01,300 --> 00:01:10,000
Оболочка как командный интерпретатор представляет собой
 компактное и мощное средство для взаимодействия

10
00:01:10,000 --> 00:01:12,890
с ядром и утилитами.

11
00:01:12,890 --> 00:01:18,690
Несмотря на множество мощных графических интерфейсов,
 предоставляемых в UNIX-подобных системах, командная строка

12
00:01:18,690 --> 00:01:24,000
по-прежнему является наиболее важным
 каналом связи  для взаимодействия с ними.

13
00:01:24,000 --> 00:01:36,460
Все команды, вводимые в строке, могут использоваться
 в командных файлах, выполняемых оболочкой, и наоборот.

14
00:01:36,470 --> 00:01:44,660
Действия, выполняемые в интерпретаторе команд, затем могут быть окружены графическим пользовательским интерфейсом

15
00:01:44,660 --> 00:01:52,819
и детали их выполнения, таким образом,
 будут скрыты от конечного пользователя.

16
00:01:52,819 --> 00:02:01,890
Каждый раз, когда пользователь входит в систему,
 он попадает в среду так называемого

17
00:02:01,890 --> 00:02:10,860
«домашнего интерпретатора» пользователя, который выполняет
 действия по настройке для пользовательского сеанса

18
00:02:10,860 --> 00:02:16,440
и впоследствии осуществляет интерактивное общение с пользователем.

19
00:02:16,440 --> 00:02:25,340
Выход из пользовательского сеанса завершает работу
 интерпретатора и порожденных из него процессов.

20
00:02:25,350 --> 00:02:34,850
Любому пользователю может быть назначен любой
 из существующих в системе интерпретаторов

21
00:02:34,850 --> 00:02:36,890
или интерпретатор собственной разработки.

22
00:02:36,890 --> 00:02:50,380
На данный момент существует множество интерпретаторов команд,
 которые могут быть как пользовательской оболочкой,

23
00:02:50,380 --> 00:02:57,030
 так и исполнителем командных файлов:
* sh -- это Bourne-Shell -- исторический

24
00:02:57,030 --> 00:03:07,160
и концептуальный предок всех других оболочек,
 разработанный Стивеном Борном в AT&T Bell Labs и включенный

25
00:03:07,160 --> 00:03:17,190
в качестве оболочки по умолчанию для Версии 7 Unix.
* csh -- C-Shell -- интерпретатор, разработанный

26
00:03:17,190 --> 00:03:27,020
Биллом Джоем в Университете Беркли для системы 3BSD с Си-подобным

27
00:03:27,020 --> 00:03:30,940
синтаксисом управляющих операторов.

28
00:03:30,940 --> 00:03:42,709
В нем были расширены возможности интерактивной работы
 и управления задачами, но синтаксис командного файла отличался

29
00:03:42,709 --> 00:03:43,910
от Bourne-Shell.

30
00:03:43,910 --> 00:03:56,319
* ksh -- Korn-Shell -- интерпретатор, разработанный Дэвидом Корном
 и включенный в стандартную комплектацию SYSV.

31
00:03:56,319 --> 00:04:00,410
Совместим с Bourne-Shell, включает инструменты
 редактирования командной строки.

32
00:04:00,410 --> 00:04:11,880
Набор средств, предоставляемый Korn-Shell,
 был утвержден как стандарт командного языка в POSIX.

33
00:04:11,880 --> 00:04:20,090
В дополнение к вышеуказанным оболочкам, которые
 стандартно поставлялись с коммерческими системами,

34
00:04:20,090 --> 00:04:28,509
был разработан ряд интерпретаторов, свободно
 распространяемых в исходных кодах:

35
00:04:28,509 --> 00:04:34,820
* bash -- Bourne-Again-Shell, в достаточной мере совместимый с Bourne-Shell, включая как средства интерактивной работы, предложенные в C-Shell,

36
00:04:34,820 --> 00:04:41,580
так и механизмы редактирования командной строки.

37
00:04:41,580 --> 00:04:50,810
* tcsh -- Tenex-C-Shell -- дальнейшее развитие C-Shell
 с расширенным интерактивным

38
00:04:50,810 --> 00:04:54,720
интерфейсом и немного улучшенным механизмом сценариев.

39
00:04:54,720 --> 00:05:04,210
* zsh -- Z-Shell -- включает в себя все разработки
 Bourne-Again-Shell и Tenex-C-Shell,

40
00:05:04,210 --> 00:05:15,850
а также некоторые из их значительных расширений
 (однако не столь популярных, как bash и tcsh).

41
00:05:15,850 --> 00:05:24,250
* pdksh -- Public-Domain-Korn-Shell -- свободно
 распространяемый аналог Korn-Shell

42
00:05:24,250 --> 00:05:25,320
с некоторыми дополнениями.

43
00:05:25,320 --> 00:05:34,520
Кроме того, существуют ещё и "маленькие" шеллы часто используемые
 во встраиваемых и мобильных системах, таких как ash, dash,

44
00:05:34,520 --> 00:05:35,669
busybox, и т.д.

