1
00:00:06,089 --> 00:00:12,679
На верхнем уровне UNIX-подобные системы могут быть очень удобны для обычных пользователей,

2
00:00:12,679 --> 00:00:18,109
и они могут даже не знать, что используют этот тип ОС.

3
00:00:18,109 --> 00:00:29,800
Например, в настоящее время наиболее часто используемыми операционными системами являются системы Android на базе Linux

4
00:00:29,800 --> 00:00:45,900
и системы Apple на базе UNIX, в которых пользователь видит только удобный графический интерфейс.

5
00:00:45,910 --> 00:00:55,610
Но новички, которые только начинают изучать UNIX-подобные системы для администрирования или разработки,

6
00:00:55,610 --> 00:01:00,670
иной раз жалуются на их сложность.

7
00:01:00,670 --> 00:01:09,079
Не пугайтесь - на самом деле такие системы основаны на довольно простых концепциях.

8
00:01:09,079 --> 00:01:21,950
Есть только три вещи (три с половиной, если быть точным), которые вам нужно знать, чтобы чувствовать себя комфортно

9
00:01:21,950 --> 00:01:25,460
в любых UNIX-подобных системах:

10
00:01:25,460 --> 00:01:35,080
пользователи, файлы, процессы и терминальные линии.

11
00:01:35,099 --> 00:01:46,820
Первый из них не слишком хорошо знаком современным пользователям просто потому, что нынче мы обычно имеем по нескольку компьютерных устройств в персональном доступе.

12
00:01:46,829 --> 00:01:57,329
UNIX-же создавался в те времена когда компьютеры были дорогой роскошью и одним компьютером

13
00:01:57,329 --> 00:01:59,829
пользовалось множество пользователей.

14
00:01:59,829 --> 00:02:07,799
Вследствие этого с самого начала UNIX имел строгие политики безопасности

15
00:02:07,799 --> 00:02:11,660
и разграничения прав пользователей.

16
00:02:11,660 --> 00:02:25,380
И теперь в UNIX-подобных системах у нас есть десятки пользователей и групп, даже если они скрыты механизмом автоматического входа.

17
00:02:25,390 --> 00:02:32,409
И большинство из них - это так называемые псевдо-пользователи, которые нужны для запуска системных служб.

18
00:02:32,409 --> 00:02:43,650
Как мы увидим позже, они требуются архитектурой системы, поскольку она построена на разрешениях

19
00:02:43,650 --> 00:02:55,659
пользователей и групп для управления доступом к системным ресурсам (процессам и файлам).

21
00:02:55,659 --> 00:03:04,390
Если мы говорим об обычных пользователях, они могут войти в систему с помощью имени пользователя и пароля

22
00:03:04,390 --> 00:03:08,510
и взаимодействовать с приложениями, установленными в системе.

23
00:03:08,510 --> 00:03:17,719
Каждый пользователь имеет полные права доступа только к своему домашнему каталогу и ограниченные права доступа

24
00:03:17,719 --> 00:03:21,879
к файлам и каталогам вне его.

25
00:03:21,879 --> 00:03:33,330
Это можно рассматривать как защиту от дурака - обычные пользователи не могут ничего разрушить в системе

26
00:03:33,330 --> 00:03:37,840
просто потому, что у них нет на это полномочий.

27
00:03:37,840 --> 00:03:46,409
Более того, они не могут даже просматривать домашний каталог другого пользователя или защищенные системные файлы и каталоги.

29
00:03:46,409 --> 00:03:53,739
Для выполнения задач системного администрирования в системе есть специальный суперпользователь

30
00:03:53,739 --> 00:03:57,670
(обычно называемый «root») с дополнительными правами.

31
00:03:57,670 --> 00:04:07,480
На системном уровне каждый пользователь или группа выглядит как целое число: идентификатор пользователя (UID)

32
00:04:07,480 --> 00:04:11,540
 и идентификатор группы (GID).

33
00:04:11,540 --> 00:04:18,120
Файлы -- это следующий важный концепт для UNIX-подобных систем.

34
00:04:18,120 --> 00:04:27,650
Почти все системные ресурсы выглядят как файлы, включая устройства и даже процессы в некоторых системах.

36
00:04:27,650 --> 00:04:35,460
И основные концепции остались прежними с самого начала эры UNIX.

37
00:04:35,460 --> 00:04:40,400
У нас есть иерархическая файловая система с одним корневым каталогом.

38
00:04:40,400 --> 00:04:47,500
Все ресурсы, включая файловые системы, существующие на устройствах или внешние сетевые ресурсы, 

39
00:04:47,500 --> 00:04:54,389
подсоединяются к этой файловой системе через отдельные каталоги -- эта операция называется «монтированием» (mount).

40
00:04:54,389 --> 00:05:02,020
С другой стороны, вы можете получить доступ к устройству (реальному или виртуальному) как к потоку байтов

41
00:05:02,020 --> 00:05:06,740
 и работать с ним как с обычным файлом.

42
00:05:06,740 --> 00:05:14,750
Все файлы и каталоги принадлежат пользователям (реальным или псевдо) и группам, а доступ на чтение, запись

43
00:05:14,750 --> 00:05:20,910
и выполнение к ним контролируется правами доступа.

44
00:05:20,910 --> 00:05:28,000
Процесс -- это программа, запускаемая из исполняемого файла.

45
00:05:28,000 --> 00:05:32,750
Каждый процесс принадлежит пользователю и группе.

46
00:05:32,750 --> 00:05:39,389
Отношения между владельцами процессов и ресурсов определяют права доступа

47
00:05:39,389 --> 00:05:43,069
в соответствии с выставленными разрешениями для данного ресурса.

48
00:05:43,069 --> 00:05:54,699
Все процессы живут в иерархической системе, основанной на отношениях родитель-потомок.

49
00:05:54,699 --> 00:06:02,190
В системе есть начальный процесс, называемый «init», который запускается при загрузке.

50
00:06:02,190 --> 00:06:06,990
Все системные службы запускаются этим начальным процесса.

51
00:06:06,990 --> 00:06:15,940
По сути дела есть два типа процессов в Linux -- процессы переднего плана и фоновые процессы:

52
00:06:15,940 --> 00:06:23,110
Процессы переднего плана (Foreground processes), так же называемые интерактивными -- инициализируются

53
00:06:23,110 --> 00:06:25,879
и контролируются через терминальные сессии.

54
00:06:25,879 --> 00:06:36,479
Другими словами, запуск таких процессов в системе осуществляет пользователь;

55
00:06:36,479 --> 00:06:45,280
они не могут запускаться автоматически как часть системных функций/служб.

56
00:06:45,280 --> 00:06:52,330
Фоновые (Background), так же называемые не интерактивными или автоматическими процессами --

57
00:06:52,330 --> 00:07:01,360
процессы не подсоединённые к терминалу; они не ожидают какого-либо ввода со стороны пользователя.

58
00:07:01,360 --> 00:07:04,889
Системные сервисы всегда являются фоновыми процессами.

59
00:07:04,889 --> 00:07:15,030
И, наконец, интерактивные процессы переднего плана должны быть подключены к терминальной сессии

60
00:07:15,030 --> 00:07:17,280
через терминальную  линию.

61
00:07:17,280 --> 00:07:23,949
Во времена когда создавался UNIX телетайпы (TTY), устройства разработанные ещё в 19-ом столетии,

62
00:07:23,949 --> 00:07:31,379
были основным средством коммуникации между пользователем и компьютером.

63
00:07:31,379 --> 00:07:39,849
Это был очень простой интерфейс работавший с потоком байтов

64
00:07:39,849 --> 00:07:42,050
кодированным набором символов ASCII.

65
00:07:42,050 --> 00:07:53,540
Подключение осуществляется через последовательный интерфейс (например, RS232) с фиксированным набором скоростей подключения.

66
00:07:54,939 --> 00:08:01,750
Этот интерфейс по-прежнему является основным пользовательским интерфейсом для UNIX-подобных систем.

67
00:08:01,750 --> 00:08:10,740
Реализация каждой новой формы взаимодействия с пользователем, такой как полноэкранные терминалы,

68
00:08:10,740 --> 00:08:22,150
графические системы и сетевые соединения, начинается с реализации простого интерфейса командной строки TTY.

70
00:08:22,150 --> 00:08:29,640
Более того, как мы увидим, эта абстракция интерфейса дает нам очень мощный и гибкий механизм

71
00:08:29,640 --> 00:08:35,349
взаимодействия между программами, в том числе и без вмешательства человека.

