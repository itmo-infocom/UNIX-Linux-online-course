1
00:00:06,180 --> 00:00:13,680
Как мы помним, пользователи -- одна из трех опор,
 на которых покоится UNIX-мир.

2
00:00:13,680 --> 00:00:21,600
Вы можете использовать какие-то графические интерфейсы
 для управления пользователями и группами,

3
00:00:21,600 --> 00:00:24,340
но простые утилиты CLI зачастую оказываются более удобными.

4
00:00:24,340 --> 00:00:33,000
Это:
* `adduser` или` useradd` -- создать нового пользователя
 или обновить информацию

5
00:00:33,000 --> 00:00:41,590
о новом пользователе, установленную по умолчанию
* `groupadd` -- создать новую группу

6
00:00:41,590 --> 00:00:50,370
* и` passwd` -- обновить токены аутентификации пользователя.

7
00:00:50,370 --> 00:01:02,230
Чтобы создать нового пользователя, нам (как 'root')
 просто нужно запустить программу `adduser`

8
00:01:02,230 --> 00:01:07,329
и установить пароль с помощью `passwd`.

9
00:01:07,329 --> 00:01:14,565
Команда `passwd` не так проста, как кажется, и вы можете заглянуть в лекцию

10
00:01:14,565 --> 00:01:24,240
"Под капотом -- специальные биты разрешений" о s-bit для `passwd`.

11
00:01:24,240 --> 00:01:36,890
Но `adduser` также в какой-то мере черная магия -- на самом деле
 все данные, относящиеся к пользователям и группам,

12
00:01:36,890 --> 00:01:46,460
помещаются в общие текстовые файлы, которые можно изменять
 с помощью обычных текстовых редакторов:

13
00:01:46,460 --> 00:01:50,920
$ less /etc/passwd

14
00:01:50,920 --> 00:01:58,579
Формат файла довольно прост -- каждому пользователю соответствует

15
00:01:58,579 --> 00:02:05,680
одна строка с полями, разделенными двоеточиями:

16
00:02:05,680 --> 00:02:20,170
$ man 5 passwd

17
00:02:20,170 --> 00:02:27,440
Поля в порядке слева направо:

18
00:02:28,930 --> 00:02:39,749
Имя пользователя: строка, которую пользователь вводит
 при входе в операционную систему --

19
00:02:39,749 --> 00:02:40,749
logname.

20
00:02:40,749 --> 00:02:48,040
Оно должно быть уникальным для всех пользователей,
 перечисленных в файле.

21
00:02:48,040 --> 00:02:49,409
Второе поле --

22
00:02:49,409 --> 00:02:58,389
это информация, используемая для проверки пароля пользователя.

23
00:02:58,389 --> 00:03:11,269
И вначале в это поле фактически помещались данные пароля.

24
00:03:11,269 --> 00:03:20,790
Но ведь мы можем читать этот файл как обычный пользователь --
 этого требует дизайн системы.

25
00:03:20,790 --> 00:03:34,469
Могли ли тогда пользователи читать пароли других пользователей?

26
00:03:34,469 --> 00:03:37,120
Отнюдь!

27
00:03:37,120 --> 00:03:45,450
В классической статье Роберта Морриса и Кена Томпсона
«Безопасность паролей: история болезни»

28
00:03:45,450 --> 00:03:58,259
о системе паролей UNIX Моррис описал реальный инцидент, 
который он сам видел:

29
00:03:58,259 --> 00:04:02,599
«Возможно, самый запоминающийся такой случай произошел

30
00:04:02,599 --> 00:04:13,109
в начале 1960-х годов, когда системный администратор системы CTSS
 в Массачусетском технологическом институте редактировал

31
00:04:13,109 --> 00:04:22,060
файл паролей, а другой системный администратор редактировал
 ежедневное сообщение, которое печатается

32
00:04:22,060 --> 00:04:26,150
на каждом терминале при входе в систему.

33
00:04:26,150 --> 00:04:35,639
Из-за ошибки проектирования программного обеспечения файлы временных редакторов двух пользователей были поменялись местами,

34
00:04:35,639 --> 00:04:48,640
и, таким образом, файл паролей печатался
 на каждом терминале при входе в систему».

35
00:04:48,650 --> 00:04:53,740
И основная идея паролей UNIX --

36
00:04:53,740 --> 00:04:59,009
не надеяться на то, что их можно просто как-то скрыть.

37
00:04:59,009 --> 00:05:06,660
Лучше вообще не сохранять пароли в системе.

38
00:05:06,660 --> 00:05:18,520
На самом деле, при создании пароля
 просто генерировался случайный код (так называемый

39
00:05:18,520 --> 00:05:34,540
код SALT ), а затем на основе этого кода и пароля выполнялась
 односторонняя процедура `crypt` (шифрование),

40
00:05:34,540 --> 00:05:35,540
базирующаяся на алгоритме DES:

41
00:05:35,540 --> 00:05:36,540
$ man crypt

42
00:05:36,540 --> 00:05:48,969
И результат этой операции невозможно расшифровать --

43
00:05:48,969 --> 00:06:01,590
собственно, мы получили какой-то хеш. При входе в систему мы получаем

44
00:06:01,590 --> 00:06:09,590
SALT из поля пароля, шифруем его с введенным паролем и просто сравниваем

45
00:06:09,590 --> 00:06:14,310
с содержимым поля пароля.

46
00:06:14,310 --> 00:06:29,680
В большинстве современных случаев это поле фактически установлено

47
00:06:29,680 --> 00:06:42,789
в «x» (или «*», или какой-либо другой индикатор),
 а фактическая информация о пароле хранится

48
00:06:42,789 --> 00:06:50,289
в отдельном файле теневых паролей.

49
00:06:50,289 --> 00:06:55,379
Третье поле.

50
00:06:55,379 --> 00:07:01,720
Это идентификационный номер пользователя,
 используемый операционной системой для внутренних целей.

51
00:07:01,720 --> 00:07:05,639
Он не обязательно должен быть уникальным.

52
00:07:05,639 --> 00:07:20,380
Более того, суперпользователь -- это просто пользователь
 с нулевым идентификатором и, на самом деле, у вас может быть

53
00:07:20,380 --> 00:07:26,330
несколько суперпользователей в дополнение
 к традиционному суперпользователю “root”.

54
00:07:26,330 --> 00:07:36,650
Например, вы можете создать какого-нибудь
 суперпользователя с UID 0 и именем типа «halt»

55
00:07:36,650 --> 00:07:44,850
и с командой «shutdown» в качестве оболочки для пользователя
 и предоставить пароль тому пользователю,

56
00:07:44,850 --> 00:07:58,219
который должен выключать систему на ночь.

57
00:07:58,219 --> 00:08:05,719
Поле четвёртое --

58
00:08:05,719 --> 00:08:16,789
идентификатор группы, который определяет
 основную группу пользователя; все файлы,

59
00:08:16,789 --> 00:08:23,559
созданные этим пользователем, изначально могут быть доступны этой группе.

60
00:08:23,559 --> 00:08:41,419
Вы можете изменить это значение по умолчанию
 во время текущего сеанса с помощью команды `newgrp`.

61
00:08:47,889 --> 00:08:57,780
Поле Gecos, комментарий, описывающий человека или аккаунт.

62
00:08:57,780 --> 00:09:08,899
Некоторые ранние системы Unix в Bell Labs
 использовали мэйнфреймы GE/Honeywell

63
00:09:08,899 --> 00:09:15,370
с General Comprehensive Operating System (GCOS)
 для буферизации печати и различных других сервисов,

64
00:09:15,370 --> 00:09:23,980
поэтому это поле было добавлено для хранения
 информации о пользователе GECOS.

65
00:09:23,980 --> 00:09:33,079
Как правило, теперь это набор сведений, разделенных запятыми,
 включая полное имя пользователя

66
00:09:33,079 --> 00:09:41,850
и контактные данные, которые могут использоваться некоторыми командами, например, почтовым агентом пользователя.

67
00:09:43,070 --> 00:09:49,790
Путь к домашнему каталогу пользователя.

68
00:09:51,610 --> 00:09:59,050
И программа, которая запускается каждый раз,
 когда пользователь входит в систему.

69
00:09:59,050 --> 00:10:13,310
Для интерактивного пользователя это обычно
 один из интерпретаторов командной строки

70
00:10:13,310 --> 00:10:15,580
(shell) системы.

71
00:10:15,580 --> 00:10:31,100
Для псевдопользователей, которым не нужны интерактивные сеансы,
 это могут быть исполняемые файлы `nologin`

72
00:10:31,100 --> 00:10:40,740
или просто `false`, которые завершаются сразу после запуска.

73
00:10:40,740 --> 00:10:50,310
Описание групп также помещается в текстовый файл:

74
00:10:50,310 --> 00:10:56,970
$ less /etc/group

75
00:10:56,970 --> 00:10:59,810
В этом файле мы видим похожий формат:

76
00:10:59,810 --> 00:11:01,660
$ man 5 group

77
00:11:01,660 --> 00:11:05,880
group_name -- имя группы.

78
00:11:05,880 --> 00:11:11,790
password -- поле пароля, которое никогда не использовалось.

79
00:11:14,230 --> 00:11:19,590
GID -- числовой идентификатор группы.

80
00:11:19,590 --> 00:11:29,630
users_list -- список имен пользователей,
 входящих в эту группу, разделенных запятыми.

81
00:11:29,630 --> 00:11:38,670
И, наконец, файл с реальными данными о паролях:

82
00:11:38,670 --> 00:11:49,390
$ ls -l /etc/shadow

83
00:11:49,390 --> 00:11:54,850
Как мы видим, только суперпользователь имеет доступ к этому файлу.

84
00:11:54,850 --> 00:12:08,980
Перенос хэшей паролей из /etc/passwd в этот файл
 был осуществлен для предотвращения атак методом перебора

85
00:12:08,980 --> 00:12:18,610
с использованием современного компьютерного оборудования,
 которое сейчас становится все мощнее и дешевле.

86
00:12:18,610 --> 00:12:30,800
И мы можем видеть хеши паролей во втором поле записей

87
00:12:30,800 --> 00:12:32,640
для каждого пользователя:

88
00:12:32,640 --> 00:12:38,160
$ man 5 shadow

89
00:12:38,160 --> 00:12:53,220
Поле пароля, которое начинается с восклицательного знака или звездочки,

90
00:12:53,220 --> 00:12:55,839
означает, что пароль заблокирован.

91
00:12:55,839 --> 00:13:03,190
Остальные символы в строке представляют собой
 поле пароля до того, как пароль был заблокирован,

92
00:13:03,190 --> 00:13:11,760
и вы можете просто удалить восклицательный знак,
 чтобы разблокировать его.

93
00:13:11,760 --> 00:13:18,760
В многопользовательской системе с большим количеством администраторов для редактирования файлов паролей и групп рекомендуется использовать

94
00:13:18,760 --> 00:13:46,819
команды `vipw` и` vigr`, чтобы избежать конфликтов,
 когда несколько администраторов

95
00:13:46,819 --> 00:13:49,970
редактируют один и тот же файл одновременно.

96
00:13:51,339 --> 00:13:57,200
Этот механизм файлового хранения для работы
 с учетными записями пользователей не запрограммирован жестко.

97
00:13:57,200 --> 00:14:06,380
Вы можете переключиться на службы
сетевой аутентификации, такие как LDAP или Winbind,

98
00:14:06,380 --> 00:14:07,380
 с помощью утилиты `setup`

99
00:14:09,250 --> 00:14:16,230
или просто отредактировав текстовый файл конфигурации `/etc/nsswitch.conf`.

100
00:14:22,010 --> 00:14:30,300
Другие настройки, связанные с безопасностью, в системах Linux,

101
00:14:30,300 --> 00:14:55,670
могут быть выполнены в каталогах `/etc/security`
 и PAM configuration (/etc/pam.d/).

102
00:14:55,670 --> 00:14:58,100
Как видим,

103
00:14:58,109 --> 00:15:00,290
парадигма системного администрирования UNIX

104
00:15:00,290 --> 00:15:12,110
не скрывает деталей от пользователя, все можно настроить

105
00:15:12,110 --> 00:15:14,069
руками или скриптами.

106
00:15:14,069 --> 00:15:22,410
Для новичков такие системы просто предоставляют более или менее
 удобные для пользователя инструменты и визарды,

107
00:15:22,410 --> 00:15:27,300
просто снижающие входной барьер.

