1
00:00:06,750 --> 00:00:13,350
Как мы помним, связь между stdout и stderr выглядит так:

2
00:00:13,350 --> 00:00:15,030
prog 2>&1

3
00:00:15,030 --> 00:00:19,140
Что означают эти числа?

4
00:00:19,140 --> 00:00:30,150
Чтобы понять это, нам нужно понять еще одну вещь -- файловые дескрипторы.

5
00:00:30,150 --> 00:00:39,420
В Unix и связанных компьютерных операционных системах дескриптор файла -- это абстрактный идентификатор (дескриптор),

6
00:00:39,420 --> 00:00:50,860
используемый для доступа к файлу или другому ресурсу ввода/вывода, например, программному каналу или сетевому сокету.

7
00:00:50,860 --> 00:00:58,490
Дескрипторы файлов являются частью спецификации
 прикладных программных интерфейсов POSIX.

8
00:00:58,490 --> 00:01:09,560
Дескриптор файла -- это положительное целое число,
 обычно представленное в языке программирования C

9
00:01:09,560 --> 00:01:16,560
как целое число (отрицательные значения
 зарезервированы для обозначения отсутствия значения

10
00:01:16,560 --> 00:01:21,040
или состояния ошибки).

11
00:01:21,040 --> 00:01:28,040
Каждый запущенный процесс в UNIX-подобной системе
 имеет связанную таблицу открытых файлов --

12
00:01:28,040 --> 00:01:36,750
таблицу файловых дескрипторов.

13
00:01:36,750 --> 00:01:49,630
Каждый процесс Unix (за исключением, возможно, демонов)
 должен иметь три стандартных файловых дескриптора POSIX,

14
00:01:49,630 --> 00:01:54,260
соответствующих трем стандартным потокам:

15
00:01:54,260 --> 00:01:58,150
* 0 -- stdin (стандартный ввод)
* 1 -- stdout (стандартный вывод)

16
00:01:58,150 --> 00:02:00,100
* 2 -- stderr (стандартный вывод ошибок)

17
00:02:05,059 --> 00:02:16,610
все эти числа -- это просто позиции

18
00:02:16,610 --> 00:02:21,670
в таблице файловых дескрипторов.

19
00:02:21,670 --> 00:02:32,570
В Linux вы можете увидеть эту таблицу
 для каждого процесса в файловой системе `/proc`.

20
00:02:32,570 --> 00:02:35,370
Например, для первого процесса -- `init`:

21
00:02:35,370 --> 00:02:40,430
$ sudo ls -l /proc/1/fd | less

22
00:02:40,430 --> 00:02:42,670
Как мы видим, stdin и stdout

23
00:02:42,670 --> 00:02:59,310
просто перенаправляются на специальное устройство
 `/dev/null`, а stderr не открывается вовсе.

