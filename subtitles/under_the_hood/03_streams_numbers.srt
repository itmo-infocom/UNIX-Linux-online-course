1
00:00:06,750 --> 00:00:13,350
As we remember, the connection between stdout
and stderr looks like this:

2
00:00:13,350 --> 00:00:15,030
prog 2>&1

3
00:00:15,030 --> 00:00:19,140
What do these numbers mean?

4
00:00:19,140 --> 00:00:30,150
To understand this, we need to know one more
thing -- file descriptors.

5
00:00:30,150 --> 00:00:39,420
In Unix and related computer operating systems,
a file descriptor is an abstract indicator

6
00:00:39,420 --> 00:00:50,860
(handle) used to access a file or other input/output
resource, such as a pipe or network socket.

7
00:00:50,860 --> 00:00:58,490
File descriptors form part of the POSIX application
programming interface.

8
00:00:58,490 --> 00:01:09,560
A file descriptor is a non-negative integer,
generally represented in the C programming

9
00:01:09,560 --> 00:01:19,330
language as the type integer (negative values
being reserved to indicate "no value" or an

10
00:01:19,330 --> 00:01:21,040
error condition).

11
00:01:21,040 --> 00:01:33,130
Every started process on a UNIX-like system
has an associated open files table -- a table

12
00:01:33,130 --> 00:01:36,750
of file descriptors.

13
00:01:36,750 --> 00:01:49,630
Each Unix process (except perhaps a daemon)
should expect to have three standard POSIX

14
00:01:49,630 --> 00:01:54,260
file descriptors, corresponding to the three
standard streams:

15
00:01:54,260 --> 00:01:58,150
* 0 -- stdin
* 1 -- stdout

16
00:01:58,150 --> 00:02:00,100
* 2 -- stderr

17
00:02:05,059 --> 00:02:19,580
all the numbers are just positions in table
of 

18
00:02:19,580 --> 00:02:21,670
file descriptors.

19
00:02:21,670 --> 00:02:32,570
On Linux, you can see this table for each
process in the `/proc` filesystem, for example

20
00:02:32,570 --> 00:02:35,370
for the first process -- `init`:

21
00:02:35,370 --> 00:02:40,430
$ sudo ls -l /proc/1/fd | less

22
00:02:40,430 --> 00:02:47,860
As we can see, stdin and stdout are simply

23
00:02:47,860 --> 00:02:59,310
redirected to `/dev/null` special device, and stderr does
not open.

